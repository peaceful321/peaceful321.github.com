---
layout: post
title:  "七牛云：CDN 常见问题总结"
categories: qiniu
tags: qiniu
author: xuhuanchao
description: 针对七牛云 CDN 的常见问题总结
---

# CDN 常见问题总结

## 常见问题

### 源站域名可以和加速域名一致么？
不可以 源站类型为域名时，源站域名不允许和加速域名相同；
因为 cname记录 和 A记录 会冲突，不能配置同一个主机记录；

### CDN对于加速内容文件大小有何限制？
针对文件大小无限制
* 如果是图片，js，css等网页文件， 推荐使用 “图片小文件” 平台
* 如果是大文件， 软件安装包，大的压缩包（超过20M），推荐使用 ”下载分发“平台
* 如果大文件是音视频文件，加速视频的点播服务，推荐使用 ”点播“ 平台

### 针对动态文件可以进行加速分发么？
如果加速域名下面的文件类型多为动态文件，强烈建议做动静分离；动态内容采用独立域名，不使用CDN加速

### 采用CDN服务对源站点是否需要改造？
基本不需要，但建议用户先做动静分离，以达到更优的加速效果，动态文件和静态文件放在不同的域名下面
，静态资源加速。

### CDN是对网站所在的服务器加速，还是对域名加速？
是针对某个域名下面加速的，如果该域名完成了加速配置，那么这个域名下面的文件的访问都会通过CDN

### 七牛云CDN的优势
* 全面覆盖，无盲点
    - 自建+融合，让七牛在资源冗余和节点覆盖上更加全面；
* 融各家之所长
    - 全面评估各厂商节点性能，分区域精选各家优质节点，组合优质线路为客户提供服务；
* 全面监控，实时优化，长期保证
    - 针对线上优质线路，实时动态持续优化。自研的一整套CDN运营优化体系，帮助客户专业管理CDN，保证长期稳定的高品质服务
* 一主N备，一键下线，稳定高可用
    - 除传统厂商内部监控调度系统外，七牛自主研发的外围监控体系，大大增加了整体系统的可靠性；
* 防劫持优化
    - 通过happy DNS等方式，大大降低劫持可能性；
* 小运营商全面覆盖
    - 融合多家CDN厂商，小运营商资源丰富；
    - 与小运营商（鹏博士等）合作共建，充分保障小运营商访问效果；
* 与七牛Pandora结合，超强日志分析。


### 七牛云CDN国内外分布情况
* 国内

![](http://gitblog.xuhc.me/15027063892841.png)

* 海外

![](http://gitblog.xuhc.me/15027064076592.png)



### 发生账户欠费后，CDN会停止服务么？
不会， 能够继续使用，避免导致客户业务受影响；
会通过短信还有控制台提示充值。

-------
## 缓存相关

### CDN默认缓存规则
七牛CDN缓存规则是默认缓存30天， **如图所示：**

![](http://gitblog.xuhc.me/15023576748132.jpg)

**查看结果**

![](http://gitblog.xuhc.me/15023579183403.jpg)

### CDN文件的缓存时间是多久？
* 文件的缓存时间，是指文件在浏览器中的缓存时间周期。
* CDN 缓存服务器严格遵守http的标准协议，具体的缓存时间由http 响应头里面的 Cache-Control 和
Expires 响应头控制
* Html的文件缓存时间查看方式：查看http消息头里面的 Cache-Control ，如"Cache-Control maxage=2592000（秒）"，表示文件将会缓存30天。这时除非使用手动刷新，否则新开的浏览器页面在
文件缓存周期内都不会去回源重新获取文件

### 是否支持源站的Cache-Control设置？
支持，CDN的cache本身是遵循http协议的，所以具体的缓存时间由用户的文件header头来控制的；在portal平台可以选择”遵循源站“，如图：

![](http://gitblog.xuhc.me/15023581144066.jpg)

### 缓存策略设置注意事项
* 对于不经常更新的静态文件，建议将缓存时间设置为1个月以上(eg：图片，安装包，音视频)；
* 对于需要更新并且更新很频繁的静态文件，可以将缓存时间设置短些，视业务情况而定(eg：js，css)；
* 对于动态文件（eg：php | jsp | asp），需要将 Cache-Control 设置为no-cache, private或者max-age=0，这样CDN就不会做缓存，直接回源站。（建议：做好动静分离）

**Tips:**
> 变更缓存配置规则后，新规则不会立即生效，在"原有缓存配置"时间失效后，新的配置会自动生效；若要立即生效，需要手动刷新，注意：目录刷新请仔细评估资源回源量，以免造成源站压力

### 节点缓存数据的更新和同步，是实时么？
CDN的更新不实时，首先建议用户不要做同名更新，如果必须是同名更新，用户源站更新之后，需要从控制台
提交刷新请求，或者使用API，完成主动刷新。如果不主动提交刷新，只能等待缓存文件到期后才能回源拉取最
新的文件。

### 缓存刷新和文件预取操作有限制么？
* 文件每天500个， 目录每天50个， 文件预取到CDN节点每天100个
* 每次 刷新文件/预取文件 最多20个， 每次刷新目录最多5个

如图所示：

![](http://gitblog.xuhc.me/15023586842519.jpg)

### 缓存刷新、文件预取的区别和使用场景是什么？
* 缓存刷新：强制将分发节点上缓存的资源标记为过期，当用户再次对该资源发起请求时，节点会回源
拉取资源，并缓存一份更新后的资源在分发节点
* 文件预取：主动触发将源站资源推送到边缘节点，用户访问资源时，可以直接命中缓存，缓解突增回
源流量给源站造成的压力

### 针对特殊的文件的后缀、路径 可否做特殊的缓存配置？
有的，七牛有推荐配置（可修改），还可以自己添加后缀和目录来配置，如图所示：

![](http://gitblog.xuhc.me/15023592235724.jpg)

-------


## 性能相关

### CDN的缓存命中率是多少？
这个要看用户数据的热点。文件的访问量越大，命中率相应的就会越高；按正常情况基本上是 95%+

### 如何判断请求是否命中？
* X-Cache:HIT TCP_MEM_HIT 表示命中缓存
* X-Cache:MISS TCP_MISS 则表示未命中缓存

可以查看Response Headers中关于X-Cache的信息，查看是否命中缓存

### 命中率如果较低的原因是什么？
* 网站访问量较低，文件热度不够，CDN收到请求较少无法有效命中缓存
* 缓存配置不合理，针对某些文件设置较短，导致CDN节点频繁回源
* HTTP Header设置导致无法缓存，需要用户检查源站的 Cache-Control 设置或者 Expires 的设置
* 源站动态资源较多，多为不可缓存的内容，也会导致频繁回源拉取

### CDN什么情况下会回源拉取资源？
* 用户访问时，如节点上无缓存，则会回源拉取资源
* CDN节点上的文件超时过期，会回源拉取资源
* 若为不缓存文件，用户访问时，会直接回源

### 回源带宽峰值高于网络带宽峰值如何理解？
* 针对大文件，由于CDN的一级缓存和二级缓存均支持range回源，会有效降低网络带宽峰值，若用户的源站不支持range回源，大文件回源将会引起回源带宽值增长，造成回源带宽峰值高于网络带宽峰值
* 使用了文件预取功能，该功能会将源站资源主动下发到边缘节点，引起回源流量的增长，但不会引起网络流量增长，造成回源带宽峰值高于网络带宽峰值

### CDN回源失败的场景有哪些？
* 源站带宽或计算过载，导致无法正常回源
* 源站存储的资源有问题，不能正常回源访问资源
* 可以考虑通过设置缓存时间的方式，降低回源率，并对源站进行升级扩容

-------

## 功能相关

### 是否支持HTTPS加速？
支持，且https 兼容 http

### 是否支持泛域名加速？
目前图片小文件加速、大文件下载加速、视音频点播加速均支持泛域名添加；直播业务和HTTPS安全加速暂不支持泛域名。

### 使CDN加速真正生效，如何完成解析设置"CNAME绑定"
参考链接：
> https://developer.qiniu.com/fusion/kb/1322/how-to-configure-cname-domain-name

### CDN资源监控有哪些？
* 流量统计：监控单个或多个域名的运营情况，按照域名、时间，统计流量和带宽实时信息，包含网络流量和回源流量统计
* 请求命中率：时间粒度内所有请求命中缓存的概率，即Cache节点向最终用户提供服务产生的请求数占用户所有请求数的概率
* PV：统计一个时间段内当前域名下资源文件的访问次数
* UV：统计一个时间段内当前域名下独立请求的IP次数
* 用户区域分布：分析用户在不同区域的访问量占比
* 运营商占比：分析用户在的访问量占比
* URL访问次数统计：按访问量统计排名前100的URL列表

-------

## 故障检测
### 加速域名无法访问或者访问速度慢，如何定位故障？
* ping domain 检查
* tracert -d domain 检查
* 检查本地网络情况
* 将CDN节点ip 提交工单 有技术支持协助解决


### 使用CDN，通常的故障状况有那些？
* 本地网络异常
* CDN节点异常
* 缓存配置错误
* 源站异常
* 源站采集异常

### 使用CDN，第一次回源拉数据访问是否会出现慢的情况？
会相对慢些，因为第一次CDN节点上没有数据，要回源取数据，需要回源站获取数据；建议使用文件预取，将资源提前分发到边缘节点

### 单一CDN节点负载过大如何解决？
CDN有监控措施，如果单节点负载大，会智能调用附近的节点资源来支持，保证加速效果。


### 访问CDN加速的资源返回状态码403
403状态码是拒绝访问，可以检查是否是私有空间、配置了防盗链（时间戳、referer）、回源鉴权不通过
 


